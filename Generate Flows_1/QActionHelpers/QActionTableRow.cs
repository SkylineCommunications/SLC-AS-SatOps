// <auto-generated/>
namespace Generate_Flows_1.QActionHelpers
{
	using System.Collections.Generic;

	public class QActionTableRow
	{
		private Dictionary<int, object> _columns;
		private int _index;
		private int _columnCount;

		public Dictionary<int, object> Columns
		{
			get => this._columns;
			set => this._columns = value;
		}

		public int Index => this._index;

		public string Key => this.Columns.ContainsKey(this.Index) ? (string)this.Columns[this.Index] : (string)null;

		public int ColumnCount => this._columnCount;

		public QActionTableRow(int index, int columnCount)
		{
			this._columns = new Dictionary<int, object>();
			this._index = index;
			this._columnCount = columnCount;
		}

		public QActionTableRow(int index, int columnCount, object[] oRow)
		{
			this._columns = new Dictionary<int, object>();
			this._index = index;
			this._columnCount = columnCount;
			this.FillQActionTableRow(oRow);
		}

		private void FillQActionTableRow(object[] oRow)
		{
			int key = 0;
			foreach (object obj in oRow)
			{
				this.Columns.Add(key, obj);
				++key;
			}
		}

		public object[] ToObjectArray()
		{
			object[] objectArray = new object[this.ColumnCount];
			for (int index = 0; index < this.ColumnCount; ++index)
			{
				object column = !this.Columns.ContainsKey(index) ? (object)null : this.Columns[index];
				objectArray.SetValue(column, index);
			}

			return objectArray;
		}

		public static implicit operator object[](QActionTableRow source) => source.ToObjectArray();
	}
}